# Define backend server group (FastAPI application)
upstream api_servers {
    least_conn;  # Send requests to the server with the least number of active connections
    server fastapi-app:8000;
    # You can add more servers here if you scale horizontally
}

# Redirect all HTTP requests to HTTPS
server {
    listen 80;
    server_name 138.199.215.9.nip.io;

    # Let's Encrypt challenge path for SSL verification
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
    }

    # Redirect everything else to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server block
server {
    listen 443 ssl;
    server_name 138.199.215.9.nip.io;

    # SSL certificate settings
    ssl_certificate /etc/letsencrypt/live/138.199.215.9.nip.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/138.199.215.9.nip.io/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Let's Encrypt challenge path for SSL renewal
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
    }

    # Proxy all other requests to FastAPI backend
    location / {
        proxy_pass http://api_servers;

        # Forward headers
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_read_timeout 60s;
    }
}

